// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rleC
List rleC(NumericVector x);
RcppExport SEXP _pnrShad_rleC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rleC(x));
    return rcpp_result_gen;
END_RCPP
}
// delayC
Rcpp::NumericMatrix delayC(NumericMatrix x, NumericVector damRkms);
RcppExport SEXP _pnrShad_delayC(SEXP xSEXP, SEXP damRkmsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type damRkms(damRkmsSEXP);
    rcpp_result_gen = Rcpp::wrap(delayC(x, damRkms));
    return rcpp_result_gen;
END_RCPP
}
// entryC
NumericMatrix entryC(NumericVector entry_prob, NumericMatrix entryDate, int x);
RcppExport SEXP _pnrShad_entryC(SEXP entry_probSEXP, SEXP entryDateSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type entry_prob(entry_probSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type entryDate(entryDateSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(entryC(entry_prob, entryDate, x));
    return rcpp_result_gen;
END_RCPP
}
// motivationPenaltyC
NumericMatrix motivationPenaltyC(NumericVector eFFs, NumericVector newTU, NumericMatrix ppPenalty);
RcppExport SEXP _pnrShad_motivationPenaltyC(SEXP eFFsSEXP, SEXP newTUSEXP, SEXP ppPenaltySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type eFFs(eFFsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type newTU(newTUSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ppPenalty(ppPenaltySEXP);
    rcpp_result_gen = Rcpp::wrap(motivationPenaltyC(eFFs, newTU, ppPenalty));
    return rcpp_result_gen;
END_RCPP
}
// moveC
NumericVector moveC(NumericVector day, NumericVector entryDate, IntegerVector dailyMove, NumericVector maxR, NumericMatrix eFFs, NumericVector rkm1, NumericMatrix rkm2, NumericVector spawnDate);
RcppExport SEXP _pnrShad_moveC(SEXP daySEXP, SEXP entryDateSEXP, SEXP dailyMoveSEXP, SEXP maxRSEXP, SEXP eFFsSEXP, SEXP rkm1SEXP, SEXP rkm2SEXP, SEXP spawnDateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type day(daySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type entryDate(entryDateSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dailyMove(dailyMoveSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maxR(maxRSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type eFFs(eFFsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rkm1(rkm1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type rkm2(rkm2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type spawnDate(spawnDateSEXP);
    rcpp_result_gen = Rcpp::wrap(moveC(day, entryDate, dailyMove, maxR, eFFs, rkm1, rkm2, spawnDate));
    return rcpp_result_gen;
END_RCPP
}
// maxrkmC
NumericVector maxrkmC(CharacterVector fishAges, NumericVector maxrkm, NumericVector upstream_path, NumericVector routes);
RcppExport SEXP _pnrShad_maxrkmC(SEXP fishAgesSEXP, SEXP maxrkmSEXP, SEXP upstream_pathSEXP, SEXP routesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type fishAges(fishAgesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maxrkm(maxrkmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type upstream_path(upstream_pathSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type routes(routesSEXP);
    rcpp_result_gen = Rcpp::wrap(maxrkmC(fishAges, maxrkm, upstream_path, routes));
    return rcpp_result_gen;
END_RCPP
}
// fishPU
CharacterVector fishPU(NumericVector puRkm, NumericVector finalRKM, CharacterVector puNames);
RcppExport SEXP _pnrShad_fishPU(SEXP puRkmSEXP, SEXP finalRKMSEXP, SEXP puNamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type puRkm(puRkmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type finalRKM(finalRKMSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type puNames(puNamesSEXP);
    rcpp_result_gen = Rcpp::wrap(fishPU(puRkm, finalRKM, puNames));
    return rcpp_result_gen;
END_RCPP
}
// spawnDateC
NumericVector spawnDateC(NumericMatrix predTemps, NumericVector spawnTemp, NumericVector entryDate);
RcppExport SEXP _pnrShad_spawnDateC(SEXP predTempsSEXP, SEXP spawnTempSEXP, SEXP entryDateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type predTemps(predTempsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type spawnTemp(spawnTempSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type entryDate(entryDateSEXP);
    rcpp_result_gen = Rcpp::wrap(spawnDateC(predTemps, spawnTemp, entryDate));
    return rcpp_result_gen;
END_RCPP
}
// upstreamPathC
NumericVector upstreamPathC(NumericMatrix x);
RcppExport SEXP _pnrShad_upstreamPathC(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(upstreamPathC(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pnrShad_rleC", (DL_FUNC) &_pnrShad_rleC, 1},
    {"_pnrShad_delayC", (DL_FUNC) &_pnrShad_delayC, 2},
    {"_pnrShad_entryC", (DL_FUNC) &_pnrShad_entryC, 3},
    {"_pnrShad_motivationPenaltyC", (DL_FUNC) &_pnrShad_motivationPenaltyC, 3},
    {"_pnrShad_moveC", (DL_FUNC) &_pnrShad_moveC, 8},
    {"_pnrShad_maxrkmC", (DL_FUNC) &_pnrShad_maxrkmC, 4},
    {"_pnrShad_fishPU", (DL_FUNC) &_pnrShad_fishPU, 3},
    {"_pnrShad_spawnDateC", (DL_FUNC) &_pnrShad_spawnDateC, 3},
    {"_pnrShad_upstreamPathC", (DL_FUNC) &_pnrShad_upstreamPathC, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_pnrShad(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
